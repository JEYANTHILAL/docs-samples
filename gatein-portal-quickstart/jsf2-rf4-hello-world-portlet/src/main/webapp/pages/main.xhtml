<!--
    JBoss, Home of Professional Open Source
    Copyright 2012, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the 
    distribution for a full listing of individual contributors.
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,  
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 -->
<f:view xmlns="http://www.w3.org/1999/xhtml"  xmlns:f="http://java.sun.com/jsf/core" xmlns:h="http://java.sun.com/jsf/html" 
    xmlns:a4j="http://richfaces.org/a4j" xmlns:rich="http://richfaces.org/rich">
    <!-- the f:view above prevents an erroneous <html> within <body> coming from portal. -->
    <!-- <h:head /> and <h:body> in the following are always needed otherwise JSF Facelets won't work -->
    <h:head />
    <h:body styleClass="jsf2Rf4HelloWorldPortlet">
        <h:outputStylesheet library="css" name="jsf2-rf4-hello-world-portlet.css" />
        <h2>JSF2+RF4 Hello World Portlet</h2>
        <p>
            This example demonstrates adding ajax processing and updating to standard JSF components combined with RichFaces 
            components.
        </p>
        <p>
            In the example below, we have a rich:select component with options loaded from helloBean.greetings and 
            standard JSF inputText with a nested ajax tag. Both components 
            trigger an ajax request on every change. The values are sent
            to the server where the backing bean is updated, and the "output" panelGroup is re-rendered, without
            requiring a full-page refresh.
        </p>
        <p>
            The form labels and buttons use localized labels from resource bundles which we have declared in 
            WEB-INF/faces-config.xml
        </p>
        <p>
            To see this example in action, change the greeting or begin typing in the input box, and watch as your text is echoed with
            html generated from the application server using an ajax call.
        </p>
        <h:form id="jsf2HelloWorldPortlet">
            <h:panelGrid columns="2">
                <h:outputLabel value="#{msgs.Greeting}" for="greeting"/>
                <rich:select id="greeting" value="#{helloBean.greeting}">
                    <f:selectItems value="#{helloBean.greetings}" />
                    <f:ajax render="output" event="selectitem"/>
                </rich:select>
                
                <h:outputLabel value="#{msgs.Name}" for="nameInput"/>
                <h:inputText id="nameInput" value="#{helloBean.name}">
                    <f:validateLength minimum="1" maximum="50" />
                    <f:ajax render="output" event="keyup"/>
                </h:inputText>
            </h:panelGrid>
            <p>
                <h:panelGroup id="output">
                    <strong><h:outputText value="#{helloBean.greeting} #{helloBean.name}!" rendered="#{not empty helloBean.name}"/></strong>
                </h:panelGroup>
            </p>
            <p>
                <h:commandButton id="reset" value="#{msgs.Reset}" actionListener="#{helloBean.reset}">
                    <f:ajax render="@form" />
                </h:commandButton> - #{msgs.ResetComment}
            </p>
            <p>
                <h:commandButton id="reload" value="#{msgs.Reload}" /> - #{msgs.ReloadComment}
            </p>
        </h:form>
    </h:body>
</f:view>